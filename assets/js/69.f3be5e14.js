(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{437:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"swift-class-didset-or-struct-didset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swift-class-didset-or-struct-didset"}},[t._v("#")]),t._v(" [Swift] class didSet or struct didSet")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" items "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("didSet")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            items "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("didSet")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I want this to be printed after changing number in test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Nothing happens")]),t._v("\n")])])]),a("p",[a("code",[t._v("didSet")]),t._v("이 reference type에 달려있을 떄")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("didSet")]),t._v(" observer가 달려있는 애(test)는 class 인스턴스로 reference type임.")]),t._v(" "),a("li",[t._v("reference type의 instance는 제자리에서 변할 수 있음 (in place)")]),t._v(" "),a("li",[t._v("즉, test자체를 바꾼게 아니라 test.number을 바꿨기 때문에 아무일도 일어나지 않음")]),t._v(" "),a("li",[t._v("test = Foo() 이렇게 하면 didSet 동작")])]),t._v(" "),a("p",[a("code",[t._v("didSet")]),t._v("이 value type에 달려있을 떄")]),t._v(" "),a("ul",[a("li",[t._v("value type은 비록 그렇게 보일지라도 실제로는 제자리에서 변할 수 없음 (not mutable in place)")]),t._v(" "),a("li",[t._v("value type의 instance를 변경했다고 하면, 다른 instance로 원래 instance를 변경하는 것임")]),t._v(" "),a("li",[t._v("test.bar = 1 이어도 인스턴스가 변경되는 것이기 때문에 didSet 동작")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBOutlet")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" modifyButton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIButton")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("didSet")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        modifyButton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cornerRadius "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Outlet의 didSet은 언제 trigger 되는가")]),t._v(" "),a("ul",[a("li",[t._v("Outlet 프로퍼티는 class가 막 초기화 될 때는 nil 상태")]),t._v(" "),a("li",[t._v("nib으로부터 object가 초기화 될 때에 값을 갖게 됨")]),t._v(" "),a("li",[t._v("모든 Outlet 이 nil이 아님을 확신할 수 있을때는 viewDidLoad 때")]),t._v(" "),a("li",[t._v("따라서 Outlet에 있는 didSet 옵저버는 viewDidLoad 바로 전에 호출")]),t._v(" "),a("li",[t._v("따라서 Outlet 프로퍼티 다룰 때 조심해야 함. 예를들어 prepareForeSegue때 접근하려고 하면 nil 받게 될 것")])]),t._v(" "),a("h2",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/29453735/is-there-a-way-to-get-didset-to-work-when-changing-a-property-in-a-class",target:"_blank",rel:"noopener noreferrer"}},[t._v("Is there a way to get didSet to work when changing a property in a class?"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/38197785/when-how-outlet-didset",target:"_blank",rel:"noopener noreferrer"}},[t._v("When/How - Outlet -> didSet"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://sujinnaljin.medium.com/swift-class%EC%99%80-struct%EC%97%90%EC%84%9C-didset%EC%9D%98-%EC%B0%A8%EC%9D%B4-f784e34ea33f",target:"_blank",rel:"noopener noreferrer"}},[t._v("[Swift] class와 struct에서 didSet의 차이"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);